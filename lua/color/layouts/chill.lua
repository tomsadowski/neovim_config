return function(spec)
    return {
        Normal         = {fg=spec.TEXT, bg=spec.CANVAS}, 
        Type           = {link='Normal'}, 
        StorageClass   = {link='Type'}, 
        Structure      = {link='Type'}, 
        Typedef        = {link='Type'}, 
        StatusLine     = {link='Normal'},
        StatusLineTerm = {link='StatusLine'}, 
        Ignore         = {link='Normal'}, 
        Constant       = {link='Normal'}, 

        Boolean        = {link='Constant'}, 
        Number         = {link='Constant'}, 
        Float          = {link='Number'}, 

        WinSeparator   = {link='Normal'}, 
        VertSplit      = {link='WinSeparator'}, 

        Function       = {fg=spec.TEXT}, 
        Identifier     = {fg=spec.TEXT}, 
        Error          = {fg=spec.TEXT, bg=spec.DULLEST}, 
        Todo           = {fg=spec.TEXT}, 
        Operator       = {fg=spec.TEXT}, 
        Delimiter      = {fg=spec.TEXT}, 

        Comment                   = {fg=spec.TEXT2}, 
        String                    = {fg=spec.TEXT3}, 
        Character                 = {link='String'}, 
        PreProc                   = {fg=spec.TEXT3},
        Include                   = {link='PreProc'}, 
        Define                    = {link='PreProc'}, 
        Macro                     = {link='PreProc'}, 
        PreCondit                 = {link='PreProc'}, 
        ['@comment']              = {link='Comment'}, 
        ['@comment.warning']      = {link='Comment'}, 
        ['@comment.error']        = {link='Comment'}, 
        ['@comment.note']         = {link='Comment'}, 
        ['@comment.todo']         = {link='Comment'}, 
        ['@markup']               = {link='Comment'}, 
        ['@markup.link']          = {link='Comment'}, 
        ['@markup.strong']        = {link='Comment'}, 
        ['@markup.italic']        = {link='Comment'}, 
        ['@markup.heading']       = {link='Comment'}, 
        ['@markup.underline']     = {link='Comment'}, 
        ['@markup.strikethrough'] = {link='Comment'}, 


        Statement      = {fg=spec.DULLER}, 
        Conditional    = {link='Statement'}, 
        Repeat         = {link='Statement'}, 
        Label          = {link='Statement'}, 
        Keyword        = {link='Statement'}, 
        Exception      = {link='Statement'}, 

        Special        = {fg=spec.TEXT},
        Tag            = {link='Special'}, 
        SpecialChar    = {link='Special'}, 
        SpecialComment = {link='Special'}, 
        Debug          = {link='Special'}, 

        rustModPath       = {fg=spec.DULL},
        rustFoldBraces    = {fg=spec.DULL},
        rustStorage       = {link='Statement'},
        rustSelf          = {link='Statement'},

        xmlTag            = {link='Comment'},
        xmlTagName        = {link='Comment'},
        xmlAttrib         = {link='Comment'},
        xmlEqual          = {link='Comment'},
        xmlString         = {link='Comment'},

        csInterpolationDelimiter = {link='String'},
        csSpecialChar     = {link='String'},
        csXmlTag          = {link='Comment'},
        csInterpolation   = {link='String'},
        csAccessModifier  = {link='Statement'},
        csType            = {link='Statement'},
        csClass           = {link='Statement'},
        csModifier        = {link='Statement'},
        csStorage         = {link='Statement'},
        csGeneric         = {fg=spec.DULL},
        csGenericBraces   = {link='Normal'},
      
        -- treesitter-highlight, treesitter-highlight-groups --
        ['@label']       = {link='Label'}, 
        ['@constructor'] = {link='Special'}, 
        ['@boolean']     = {link='Boolean'}, 
        ['@operator']    = {link='Operator'}, 
        ['@keyword']     = {link='Keyword'}, 
        ['@property']    = {link='Identifier'}, 

        ['@constant']         = {link='Constant'}, 
        ['@constant.builtin'] = {link='Special'}, 

        ['@variable']                   = {fg=spec.TEXT}, 
        ['@variable.builtin']           = {link='Special'}, 
        ['@variable.parameter.builtin'] = {link='Special'}, 

        ['@module']            = {link='Structure'}, 
        ['@module.builtin']    = {link='Special'}, 

        ['@character']         = {link='Character'}, 
        ['@character.special'] = {link='Character'}, 

        ['@string']             = {link='String'}, 
        ['@string.regexp']      = {link='@string.special'}, 
        ['@string.escape']      = {link='@string.special'}, 
        ['@string.special']     = {link='String'}, 
        ['@string.special.url'] = {link='Underlined'}, 

        ['@function']         = {link='Function'}, 
        ['@function.builtin'] = {link='Special'}, 

        ['@number']       = {link='Number'}, 
        ['@number.float'] = {link='Float'}, 

        ['@type']         = {link='Type'}, 
        ['@type.builtin'] = {link='Special'}, 

        ['@attribute']         = {link='Comment'}, 
        ['@attribute.builtin'] = {link='Comment'}, 

        ['@punctuation']         = {link='Delimiter'},
        ['@punctuation.special'] = {link='Special'}, 

        ['@diff.plus']  = {link='Added'}, 
        ['@diff.minus'] = {link='Removed'}, 
        ['@diff.delta'] = {link='Changed'}, 

        ['@tag']         = {link='Tag'}, 
        ['@tag.builtin'] = {link='Comment'}, 

        -- lsp-semantic-highlights --
        ['@lsp.type.class']         = {link='@type'}, 
        ['@lsp.type.struct']        = {link='@type'}, 
        ['@lsp.type.type']          = {link='@type'}, 
        ['@lsp.type.enum']          = {link='@type'}, 
        ['@lsp.type.event']         = {link='@type'}, 
        ['@lsp.type.interface']     = {link='@type'}, 
        ['@lsp.type.comment']       = {link='@comment'}, 
        ['@lsp.type.decorator']     = {link='@attribute'}, 
        ['@lsp.type.enumMember']    = {link='@constant'}, 
        ['@lsp.type.function']      = {link='@function'}, 
        ['@lsp.type.keyword']       = {link='@keyword'}, 
        ['@lsp.type.macro']         = {link='@constant.macro'}, 
        ['@lsp.type.method']        = {link='@function.method'}, 
        ['@lsp.type.modifier']      = {link='@type.qualifier'}, 
        ['@lsp.type.namespace']     = {link='@module'}, 
        ['@lsp.type.number']        = {link='@number'}, 
        ['@lsp.type.operator']      = {link='@operator'}, 
        ['@lsp.type.property']      = {link='@property'}, 
        ['@lsp.type.string']        = {link='@string'}, 
        ['@lsp.type.variable']      = {link='@variable'}, 
        ['@lsp.type.typeParameter'] = {link='@type.definition'}, 
        ['@lsp.type.parameter']     = {link='@variable.parameter'}, 
        ['@lsp.type.regexp']        = {link='@string.regexp'}, 
        ['@lsp.mod.deprecated']     = {link='DiagnosticDeprecated'}, 

        -- UI
        Added                = {fg=spec.DULLER}, 
        Changed              = {fg=spec.DULLER}, 
        Conceal              = {fg=spec.DULLEST}, 
        ColorColumn          = {bg=spec.DULLEST, reverse=true}, 
        CursorColumn         = {bg=spec.CANVAS}, 
        CursorLine           = {bg=spec.CANVAS, underline=true}, 
        DiffAdd              = {fg=spec.TEXT, bg=spec.DULLEST}, 
        DiffChange           = {fg=spec.TEXT, bg=spec.DULLEST}, 
        DiffDelete           = {fg=spec.TEXT2, bold=true}, 
        DiffText             = {fg=spec.TEXT, bg=spec.DULLEST}, 
        Directory            = {fg=spec.DULLER}, 
        ErrorMsg             = {fg=spec.TEXT2}, 
        FloatShadow          = {bg=spec.DULLEST, blend=80}, 
        FloatShadowThrough   = {bg=spec.DULLEST, blend=100}, 
        Folded               = {fg=spec.DULLER, bg=spec.CANVAS}, 
        MatchParen           = {bg=spec.DULLEST, bold=true, underline=true}, 
        ModeMsg              = {fg=spec.DULLER}, 
        MoreMsg              = {fg=spec.DULLER}, 
        PmenuThumb           = {bg=spec.DULLEST}, 
        Question             = {fg=spec.DULLER}, 
        QuickFixLine         = {fg=spec.DULLER}, 
        RedrawDebugClear     = {bg=spec.DULLEST}, 
        RedrawDebugComposed  = {bg=spec.DULLEST}, 
        RedrawDebugRecompose = {bg=spec.DULLEST}, 
        Removed              = {fg=spec.TEXT2}, 
        SpecialKey           = {fg=spec.DULLEST}, 
        SpellBad             = {sp=spec.TEXT2, undercurl=true}, 
        SpellCap             = {sp=spec.TEXT2, undercurl=true}, 
        SpellLocal           = {sp=spec.DULLER, undercurl=true}, 
        SpellRare            = {sp=spec.DULLER, undercurl=true}, 
        WarningMsg           = {fg=spec.TEXT2}, 
        WinBar               = {fg=spec.DULLER, bg=spec.DULL, bold=true}, 
        WinBarNC             = {fg=spec.DULLER, bg=spec.DULL, bold=true}, 
        CursorLineNr         = {bold=true}, 
        RedrawDebugNormal    = {reverse=true}, 
        TabLineSel           = {bold=true}, 
        TermCursor           = {reverse=true}, 
        Underlined           = {underline=true}, 
        lCursor              = {fg='bg', bg='fg'}, 
        Cursor               = {fg=bg, bg=fg}, 
        CursorIM             = {link='Cursor'}, 

        SignColumn        = {fg=spec.DULLEST}, 
        CursorLineSign    = {link='SignColumn'}, 
        FoldColumn        = {link='SignColumn'}, 
        CursorLineFold    = {link='FoldColumn'}, 

        NonText           = {fg=spec.DULLEST}, 
        EndOfBuffer       = {link='NonText'}, 
        Whitespace        = {link='NonText'}, 
        LspInlayHint      = {link='NonText'}, 
        LspCodeLens       = {link='NonText'}, 

        Visual            = {bg=spec.DULLEST}, 
        VisualNOS         = {link='Visual'}, 
        SnippetTabstop    = {link='Visual'}, 
        LspReferenceText  = {link='Visual'}, 
        LspSignatureActiveParameter = {link='Visual'}, 
        LspReferenceRead  = {link='LspReferenceText'}, 
        LspReferenceWrite = {link='LspReferenceText'}, 

        LspCodeLensSeparator  = {link='LspCodeLens'}, 

        NormalFloat  = {bg=spec.DULL}, 
        FloatBorder  = {link='NormalFloat'}, 

        Title = {fg=spec.TEXT, bold=true}, 
        FloatTitle   = {link='Title'}, 
        FloatFooter  = {link='FloatTitle'}, 

        LineNr       = {fg=spec.DULLEST}, 
        LineNrAbove  = {link='LineNr'}, 
        LineNrBelow  = {link='LineNr'}, 

        MsgSeparator = {fg=spec.CANVAS, bg=spec.TEXT}, 
        MsgArea      = {link='NONE'}, 
        NormalNC     = {link='NONE'}, 
        TermCursorNC = {link='NONE'}, 

        Pmenu = {bg=spec.CANVAS, reverse=true}, 
        PmenuKind  = {link='Pmenu'}, 
        PmenuExtra = {link='Pmenu'}, 
        PmenuMatch = {link='Pmenu'}, 
        PmenuSbar  = {link='Pmenu'}, 

        PmenuSel = {reverse=true, underline=true, blend=0}, 
        PmenuExtraSel = {link='PmenuSel'}, 
        PmenuKindSel  = {link='PmenuSel'}, 
        PmenuMatchSel = {link='PmenuSel'}, 
        WildMenu      = {link='PmenuSel'}, 

        StatusLineNC = {fg=spec.DULLER, bg=spec.CANVAS, bold=true, underline=true}, 
        StatusLineTermNC = {link='StatusLineNC'}, 
        TabLine          = {link='StatusLineNC'}, 
        TabLineFill      = {link='TabLine'}, 

        Search     = {fg=spec.TEXT, bg=spec.DULLEST},
        Substitute = {link='Search'}, 

        CurSearch = {fg=spec.CANVAS, bg=spec.TEXT, }, 
        IncSearch = {link='CurSearch'}, 

        DiagnosticDeprecated     = {sp=spec.TEXT2, strikethrough=true}, 
        DiagnosticUnderlineError = {sp=spec.TEXT2, underline=true}, 
        DiagnosticUnderlineWarn  = {sp=spec.TEXT2, underline=true}, 
        DiagnosticUnderlineInfo  = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnderlineOk    = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnderlineHint  = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnnecessary    = {link='Comment'}, 
        
        DiagnosticError            = {fg=spec.TEXT2, }, 
        DiagnosticFloatingError    = {link='DiagnosticError'}, 
        DiagnosticVirtualTextError = {link='DiagnosticError'}, 
        DiagnosticSignError        = {link='DiagnosticError'}, 

        DiagnosticWarn            = {fg=spec.TEXT2, }, 
        DiagnosticFloatingWarn    = {link='DiagnosticWarn'}, 
        DiagnosticVirtualTextWarn = {link='DiagnosticWarn'}, 
        DiagnosticSignWarn        = {link='DiagnosticWarn'}, 

        DiagnosticInfo            = {fg=spec.DULLER, }, 
        DiagnosticFloatingInfo    = {link='DiagnosticInfo'}, 
        DiagnosticVirtualTextInfo = {link='DiagnosticInfo'}, 
        DiagnosticSignInfo        = {link='DiagnosticInfo'}, 

        DiagnosticHint            = {fg=spec.DULLER, }, 
        DiagnosticFloatingHint    = {link='DiagnosticHint'}, 
        DiagnosticVirtualTextHint = {link='DiagnosticHint'}, 
        DiagnosticSignHint        = {link='DiagnosticHint'}, 

        DiagnosticOk            = {fg=spec.DULLER, }, 
        DiagnosticFloatingOk    = {link='DiagnosticOk'}, 
        DiagnosticVirtualTextOk = {link='DiagnosticOk'}, 
        DiagnosticSignOk        = {link='DiagnosticOk'}, 
    }
end

