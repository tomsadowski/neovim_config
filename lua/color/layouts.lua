local M = {}

M.chill = function(spec)
    return {
        Ignore            = {link='Normal'}, 

        ['@lsp.type.modifier']  = {link='@type.qualifier'}, 
        ['@lsp.type.namespace'] = {link='@module'}, 

        rustFoldBraces   = {fg=spec.DULL},
        csGeneric        = {fg=spec.DULL},
        csGenericBraces  = {link='csGeneric'},

        Error                    = {fg=spec.TEXT, bg=spec.DULLEST}, 
        Todo                     = {fg=spec.TEXT}, 

        Normal                   = {fg=spec.TEXT, bg=spec.CANVAS}, 
        ['@variable']                   = {link='Normal'}, 
        ['@variable.builtin']           = {link='@variable'}, 
        ['@variable.parameter.builtin'] = {link='@variable'}, 
        ['@lsp.type.variable']          = {link='@variable'}, 
        Function                 = {link='Normal'}, 
        ['@function']            = {link='Function'}, 
        ['@function.method']     = {link='@function'}, 
        ['@function.builtin']    = {link='@function'}, 
        ['@lsp.type.function']   = {link='@function'}, 
        ['@lsp.type.method']     = {link='@function.method'}, 
        ['@lsp.type.enumMember'] = {link='Normal'}, 
        Identifier               = {link='Normal'}, 
        ['@property']            = {link='Identifier'}, 
        ['@lsp.type.property']   = {link='@property'}, 
        Delimiter                = {link='Normal'}, 
        ['@punctuation']         = {link='Delimiter'},
        ['@punctuation.special'] = {link='@punctuation'}, 
        Operator                 = {link='Normal'}, 
        ['@operator']            = {link='Operator'}, 
        ['@lsp.type.operator']   = {link='@operator'}, 
        rustSigil                = {link='Normal'},
        rustEnum                 = {link='Normal'},
        ['@constructor']         = {link='Normal'}, 
        Boolean                  = {link='Normal'}, 
        ['@boolean']             = {link='Boolean'}, 
        Number                   = {link='Normal'}, 
        ['@number']              = {link='Number'}, 
        ['@lsp.type.number']     = {link='@number'}, 
        Float                    = {link='Number'}, 
        ['@number.float']        = {link='Float'}, 
        Constant                 = {link='Normal'}, 
        ['@constant']            = {link='Constant'}, 
        ['@constant.builtin']    = {link='@constant'}, 

        ['@lsp.type.typeParameter'] = {link='@type.definition'}, 
        ['@lsp.type.parameter']     = {link='@variable.parameter'}, 
        csClassType                 = {link='Normal'},

        -- TEXT2
        Comment                   = {fg=spec.TEXT2}, 
        xmlTag                    = {link='Comment'},
        xmlTagName                = {link='Comment'},
        xmlAttrib                 = {link='Comment'},
        xmlEqual                  = {link='Comment'},
        xmlString                 = {link='Comment'},
        csXmlTag                  = {link='Comment'},
        ['@comment']              = {link='Comment'}, 
        ['@comment.warning']      = {link='@comment'}, 
        ['@comment.error']        = {link='@comment'}, 
        ['@comment.note']         = {link='@comment'}, 
        ['@comment.todo']         = {link='@comment'}, 
        ['@lsp.type.comment']     = {link='@comment'}, 
        ['@markup']               = {link='@comment'}, 
        ['@markup.link']          = {link='@markup'}, 
        ['@markup.strong']        = {link='@markup'}, 
        ['@markup.italic']        = {link='@markup'}, 
        ['@markup.heading']       = {link='@markup'}, 
        ['@markup.underline']     = {link='@markup'}, 
        ['@markup.strikethrough'] = {link='@markup'}, 

        -- TEXT3
        String                   = {fg=spec.TEXT3}, 
        ['@string']              = {link='String'}, 
        ['@string.regexp']       = {link='@string'}, 
        ['@string.escape']       = {link='@string'}, 
        ['@string.special']      = {link='@string'}, 
        ['@string.special.url']  = {link='@string'}, 
        ['@lsp.type.string']     = {link='@string'}, 
        ['@lsp.type.regexp']     = {link='@string.regexp'}, 
        Character                = {link='String'}, 
        ['@character']           = {link='Character'}, 
        ['@character.special']   = {link='Character'}, 
        Special                  = {link='String'},
        SpecialChar              = {link='Special'}, 
        csSpecialChar            = {link='Special'},
        SpecialComment           = {link='Special'}, 
        Debug                    = {link='Special'}, 
        cFormat                  = {link='Special'},
        csInterpolation          = {link='Special'},
        csInterpolationDelimiter = {link='Special'},
        Tag                      = {link='Special'}, 
        ['@tag']                 = {link='Tag'}, 
        ['@tag.builtin']         = {link='Tag'}, 
        PreProc                  = {link='Special'},
        Include                  = {link='PreProc'}, 
        Define                   = {link='PreProc'}, 
        Macro                    = {link='PreProc'}, 
        ['@lsp.type.macro']      = {link='Macro'}, 
        PreCondit                = {link='PreProc'}, 
        ['@attribute']           = {link='PreProc'}, 
        ['@attribute.builtin']   = {link='@attribute'}, 
        ['@lsp.type.decorator']  = {link='@attribute'}, 

        -- DULLER
        Keyword                 = {fg=spec.DULLER}, 
        ['@keyword']            = {link='Keyword'}, 
        ['@lsp.type.keyword']   = {link='@keyword'}, 
        Conditional             = {link='Keyword'}, 
        Statement               = {link='Keyword'}, 
        Repeat                  = {link='Keyword'}, 
        Exception               = {link='Keyword'}, 
        csClass                 = {link='Keyword'},
        csModifier              = {link='Keyword'},
        csAccessModifier        = {link='Keyword'},
        Structure               = {link='Keyword'}, 
        rustSelf                = {link='Keyword'},
        Label                   = {link='Keyword'}, 
        ['@label']              = {link='Label'}, 
        Type                    = {link='Keyword'}, 
        cType                   = {link='Type'},
        csType                  = {link='Type'},
        ['@type']               = {link='Type'}, 
        ['@type.builtin']       = {link='@type'}, 
        ['@lsp.type.class']     = {link='@type'}, 
        ['@lsp.type.struct']    = {link='@type'}, 
        ['@lsp.type.type']      = {link='@type'}, 
        ['@lsp.type.enum']      = {link='@type'}, 
        ['@lsp.type.event']     = {link='@type'}, 
        ['@lsp.type.interface'] = {link='@type'}, 
        Typedef                 = {link='Type'}, 
        cTypeDef                = {link='TypeDef'},
        StorageClass            = {link='Keyword'}, 
        cStorageClass           = {link='StorageClass'},
        rustStorage             = {link='StorageClass'},
        csStorage               = {link='StorageClass'},


        -- treesitter-highlight, treesitter-highlight-groups --

        ['@module']            = {fg=spec.DULL}, 
        ['@module.builtin']    = {link='Special'}, 
        rustModPath            = {link='@module'},

        ['@diff.plus']  = {link='Added'}, 
        ['@diff.minus'] = {link='Removed'}, 
        ['@diff.delta'] = {link='Changed'}, 

        -- UI
        LineNr               = {fg=spec.DULLEST}, 
        LineNrAbove          = {link='LineNr'}, 
        LineNrBelow          = {link='LineNr'}, 
        Cursor               = {fg=CANVAS, bg=TEXT}, 
        CursorIM             = {link='Cursor'}, 
        CursorColumn         = {bg=spec.CANVAS}, 
        TermCursor           = {reverse=true}, 
        CursorLineSign       = {link='SignColumn'}, 
        CursorLineFold       = {link='FoldColumn'}, 
        lCursor              = {fg='bg', bg='fg'}, 
        CursorLine           = {bg=spec.CANVAS, underline=true}, 
        CursorLineNr         = {bold=true}, 

        Visual               = {bg=spec.DULLEST}, 
        VisualNOS            = {link='Visual'}, 
        Search               = {fg=spec.TEXT, bg=spec.DULLEST},
        Substitute           = {link='Search'}, 
        CurSearch            = {fg=spec.CANVAS, bg=spec.TEXT, }, 
        IncSearch            = {link='CurSearch'}, 

        StatusLine           = {link='Normal'},
        StatusLineTerm       = {link='StatusLine'}, 
        StatusLineNC = {fg=spec.DULLER, bg=spec.CANVAS, bold=true, underline=true}, 
        StatusLineTermNC     = {link='StatusLineNC'}, 
        TabLine              = {link='StatusLineNC'}, 
        TabLineFill          = {link='TabLine'}, 
        TabLineSel           = {bold=true}, 

        ColorColumn          = {bg=spec.DULLEST, reverse=true}, 
        SignColumn           = {fg=spec.DULLEST}, 
        FoldColumn           = {link='SignColumn'}, 

        WinSeparator         = {link='Normal'}, 
        VertSplit            = {link='WinSeparator'}, 
        WinBar               = {fg=spec.DULLER, bg=spec.DULL, bold=true}, 
        WinBarNC             = {fg=spec.DULLER, bg=spec.DULL, bold=true}, 

        Added                = {fg=spec.DULLER}, 
        Changed              = {fg=spec.DULLER}, 
        Conceal              = {fg=spec.DULLEST}, 
        DiffAdd              = {fg=spec.TEXT, bg=spec.DULLEST}, 
        DiffChange           = {fg=spec.TEXT, bg=spec.DULLEST}, 
        DiffDelete           = {fg=spec.TEXT2, bold=true}, 
        DiffText             = {fg=spec.TEXT, bg=spec.DULLEST}, 
        Directory            = {fg=spec.DULLER}, 
        ErrorMsg             = {fg=spec.TEXT2}, 
        FloatShadow          = {bg=spec.DULLEST, blend=80}, 
        FloatShadowThrough   = {bg=spec.DULLEST, blend=100}, 
        Folded               = {fg=spec.DULLER, bg=spec.CANVAS}, 
        MatchParen           = {bg=spec.DULLEST, bold=true, underline=true}, 
        ModeMsg              = {fg=spec.DULLER}, 
        MoreMsg              = {fg=spec.DULLER}, 
        PmenuThumb           = {bg=spec.DULLEST}, 
        Question             = {fg=spec.DULLER}, 
        QuickFixLine         = {fg=spec.DULLER}, 
        RedrawDebugClear     = {bg=spec.DULLEST}, 
        RedrawDebugComposed  = {bg=spec.DULLEST}, 
        RedrawDebugRecompose = {bg=spec.DULLEST}, 
        Removed              = {fg=spec.TEXT2}, 
        SpecialKey           = {fg=spec.DULLEST}, 
        SpellBad             = {sp=spec.TEXT2, undercurl=true}, 
        SpellCap             = {sp=spec.TEXT2, undercurl=true}, 
        SpellLocal           = {sp=spec.DULLER, undercurl=true}, 
        SpellRare            = {sp=spec.DULLER, undercurl=true}, 
        WarningMsg           = {fg=spec.TEXT2}, 
        RedrawDebugNormal    = {reverse=true}, 
        Underlined           = {underline=true}, 

        NonText              = {fg=spec.DULLEST}, 
        EndOfBuffer          = {link='NonText'}, 
        Whitespace           = {link='NonText'}, 
        LspInlayHint         = {link='NonText'}, 
        LspCodeLens          = {link='NonText'}, 

        SnippetTabstop       = {link='Visual'}, 
        LspReferenceText     = {link='Visual'}, 
        LspReferenceRead     = {link='LspReferenceText'}, 
        LspReferenceWrite    = {link='LspReferenceText'}, 
        LspSignatureActiveParameter = {link='Visual'}, 

        LspCodeLensSeparator = {link='LspCodeLens'}, 

        NormalFloat   = {bg=spec.DULL}, 
        FloatBorder   = {link='NormalFloat'}, 

        Title         = {fg=spec.TEXT, bold=true}, 
        FloatTitle    = {link='Title'}, 
        FloatFooter   = {link='FloatTitle'}, 

        MsgSeparator  = {fg=spec.CANVAS, bg=spec.TEXT}, 
        MsgArea       = {link='NONE'}, 
        NormalNC      = {link='NONE'}, 
        TermCursorNC  = {link='NONE'}, 

        Pmenu         = {bg=spec.CANVAS, reverse=true}, 
        PmenuKind     = {link='Pmenu'}, 
        PmenuExtra    = {link='Pmenu'}, 
        PmenuMatch    = {link='Pmenu'}, 
        PmenuSbar     = {link='Pmenu'}, 

        PmenuSel      = {reverse=true, underline=true, blend=0}, 
        PmenuExtraSel = {link='PmenuSel'}, 
        PmenuKindSel  = {link='PmenuSel'}, 
        PmenuMatchSel = {link='PmenuSel'}, 
        WildMenu      = {link='PmenuSel'}, 

        DiagnosticDeprecated     = {sp=spec.TEXT2, strikethrough=true}, 
        ['@lsp.mod.deprecated']  = {link='DiagnosticDeprecated'}, 
        DiagnosticUnderlineError = {sp=spec.TEXT2, underline=true}, 
        DiagnosticUnderlineWarn  = {sp=spec.TEXT2, underline=true}, 
        DiagnosticUnderlineInfo  = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnderlineOk    = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnderlineHint  = {sp=spec.DULLER, underline=true}, 
        DiagnosticUnnecessary    = {link='Comment'}, 
        
        DiagnosticError            = {fg=spec.TEXT2}, 
        DiagnosticFloatingError    = {link='DiagnosticError'}, 
        DiagnosticVirtualTextError = {link='DiagnosticError'}, 
        DiagnosticSignError        = {link='DiagnosticError'}, 

        DiagnosticWarn            = {fg=spec.TEXT2}, 
        DiagnosticFloatingWarn    = {link='DiagnosticWarn'}, 
        DiagnosticVirtualTextWarn = {link='DiagnosticWarn'}, 
        DiagnosticSignWarn        = {link='DiagnosticWarn'}, 

        DiagnosticInfo            = {fg=spec.DULLER}, 
        DiagnosticFloatingInfo    = {link='DiagnosticInfo'}, 
        DiagnosticVirtualTextInfo = {link='DiagnosticInfo'}, 
        DiagnosticSignInfo        = {link='DiagnosticInfo'}, 

        DiagnosticHint            = {fg=spec.DULLER}, 
        DiagnosticFloatingHint    = {link='DiagnosticHint'}, 
        DiagnosticVirtualTextHint = {link='DiagnosticHint'}, 
        DiagnosticSignHint        = {link='DiagnosticHint'}, 

        DiagnosticOk              = {fg=spec.DULLER}, 
        DiagnosticFloatingOk      = {link='DiagnosticOk'}, 
        DiagnosticVirtualTextOk   = {link='DiagnosticOk'}, 
        DiagnosticSignOk          = {link='DiagnosticOk'}, 
    }
end

return M
